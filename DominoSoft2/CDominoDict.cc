//
// File generated by rootcint at Thu Apr 28 23:04:10 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME CDominoDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "CDominoDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void CDomino_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CDomino(void *p = 0);
   static void *newArray_CDomino(Long_t size, void *p);
   static void delete_CDomino(void *p);
   static void deleteArray_CDomino(void *p);
   static void destruct_CDomino(void *p);
   static void streamer_CDomino(TBuffer &buf, void *obj);
   static Long64_t merge_CDomino(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::CDomino*)
   {
      ::CDomino *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CDomino >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CDomino", ::CDomino::Class_Version(), "./CDomino.h", 38,
                  typeid(::CDomino), ::ROOT::DefineBehavior(ptr, ptr),
                  &::CDomino::Dictionary, isa_proxy, 0,
                  sizeof(::CDomino) );
      instance.SetNew(&new_CDomino);
      instance.SetNewArray(&newArray_CDomino);
      instance.SetDelete(&delete_CDomino);
      instance.SetDeleteArray(&deleteArray_CDomino);
      instance.SetDestructor(&destruct_CDomino);
      instance.SetStreamerFunc(&streamer_CDomino);
      instance.SetMerge(&merge_CDomino);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::CDomino*)
   {
      return GenerateInitInstanceLocal((::CDomino*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CDomino*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void COUNT_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_COUNT(void *p = 0);
   static void *newArray_COUNT(Long_t size, void *p);
   static void delete_COUNT(void *p);
   static void deleteArray_COUNT(void *p);
   static void destruct_COUNT(void *p);
   static void streamer_COUNT(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::COUNT*)
   {
      ::COUNT *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::COUNT >(0);
      static ::ROOT::TGenericClassInfo 
         instance("COUNT", ::COUNT::Class_Version(), "./CDomino.h", 82,
                  typeid(::COUNT), ::ROOT::DefineBehavior(ptr, ptr),
                  &::COUNT::Dictionary, isa_proxy, 0,
                  sizeof(::COUNT) );
      instance.SetNew(&new_COUNT);
      instance.SetNewArray(&newArray_COUNT);
      instance.SetDelete(&delete_COUNT);
      instance.SetDeleteArray(&deleteArray_COUNT);
      instance.SetDestructor(&destruct_COUNT);
      instance.SetStreamerFunc(&streamer_COUNT);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::COUNT*)
   {
      return GenerateInitInstanceLocal((::COUNT*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::COUNT*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr CDomino::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *CDomino::Class_Name()
{
   return "CDomino";
}

//______________________________________________________________________________
const char *CDomino::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CDomino*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CDomino::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CDomino*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CDomino::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CDomino*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CDomino::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CDomino*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr COUNT::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *COUNT::Class_Name()
{
   return "COUNT";
}

//______________________________________________________________________________
const char *COUNT::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::COUNT*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int COUNT::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::COUNT*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void COUNT::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::COUNT*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *COUNT::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::COUNT*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void CDomino::Streamer(TBuffer &R__b)
{
   // Stream an object of class CDomino.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TGraph::Streamer(R__b);
      R__b >> dIsRaw;
      R__b >> dStopCell;
      R__b.CheckByteCount(R__s, R__c, CDomino::IsA());
   } else {
      R__c = R__b.WriteVersion(CDomino::IsA(), kTRUE);
      TGraph::Streamer(R__b);
      R__b << dIsRaw;
      R__b << dStopCell;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void CDomino::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CDomino.
      TClass *R__cl = ::CDomino::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dIsRaw", &dIsRaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dStopCell", &dStopCell);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dCell[1024]", dCell);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dMinADC", &dMinADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dArrTime", &dArrTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dIntegADC", &dIntegADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dWindowLeft", &dWindowLeft);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dWindowRight", &dWindowRight);
      TGraph::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_CDomino(void *p) {
      return  p ? new(p) ::CDomino : new ::CDomino;
   }
   static void *newArray_CDomino(Long_t nElements, void *p) {
      return p ? new(p) ::CDomino[nElements] : new ::CDomino[nElements];
   }
   // Wrapper around operator delete
   static void delete_CDomino(void *p) {
      delete ((::CDomino*)p);
   }
   static void deleteArray_CDomino(void *p) {
      delete [] ((::CDomino*)p);
   }
   static void destruct_CDomino(void *p) {
      typedef ::CDomino current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_CDomino(TBuffer &buf, void *obj) {
      ((::CDomino*)obj)->::CDomino::Streamer(buf);
   }
   // Wrapper around the merge function.
   static Long64_t  merge_CDomino(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::CDomino*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::CDomino

//______________________________________________________________________________
void COUNT::Streamer(TBuffer &R__b)
{
   // Stream an object of class COUNT.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> EvtNum;
      R__b >> PPS;
      R__b >> TrgCnt;
      R__b >> ClkCnt;
      R__b >> ClkCnt10M;
      R__b.CheckByteCount(R__s, R__c, COUNT::IsA());
   } else {
      R__c = R__b.WriteVersion(COUNT::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << EvtNum;
      R__b << PPS;
      R__b << TrgCnt;
      R__b << ClkCnt;
      R__b << ClkCnt10M;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void COUNT::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class COUNT.
      TClass *R__cl = ::COUNT::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EvtNum", &EvtNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PPS", &PPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrgCnt", &TrgCnt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ClkCnt", &ClkCnt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ClkCnt10M", &ClkCnt10M);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_COUNT(void *p) {
      return  p ? new(p) ::COUNT : new ::COUNT;
   }
   static void *newArray_COUNT(Long_t nElements, void *p) {
      return p ? new(p) ::COUNT[nElements] : new ::COUNT[nElements];
   }
   // Wrapper around operator delete
   static void delete_COUNT(void *p) {
      delete ((::COUNT*)p);
   }
   static void deleteArray_COUNT(void *p) {
      delete [] ((::COUNT*)p);
   }
   static void destruct_COUNT(void *p) {
      typedef ::COUNT current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_COUNT(TBuffer &buf, void *obj) {
      ((::COUNT*)obj)->::COUNT::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::COUNT

/********************************************************
* CDominoDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableCDominoDict();

extern "C" void G__set_cpp_environmentCDominoDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("CDomino.h");
  G__cpp_reset_tagtableCDominoDict();
}
#include <new>
extern "C" int G__cpp_dllrevCDominoDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* CDomino */
static int G__CDominoDict_651_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CDomino* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CDomino((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) CDomino((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new CDomino[n];
       } else {
         p = new((void*) gvp) CDomino[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new CDomino;
       } else {
         p = new((void*) gvp) CDomino;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CDominoDictLN_CDomino));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_651_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((CDomino*) G__getstructoffset())->GetADC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_651_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((CDomino*) G__getstructoffset())->GetADC((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_651_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((CDomino*) G__getstructoffset())->operator[]((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_651_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CDomino*) G__getstructoffset())->GetCell((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_651_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CDomino*) G__getstructoffset())->SetStopCell((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_651_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CDomino*) G__getstructoffset())->SetCell();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_651_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CDomino*) G__getstructoffset())->GetStopCell());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_651_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CDomino*) G__getstructoffset())->SetIsRaw((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_651_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((CDomino*) G__getstructoffset())->IsRaw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_651_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((CDomino*) G__getstructoffset())->GetPulseHeight((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_651_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((CDomino*) G__getstructoffset())->GetMinimum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_651_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((CDomino*) G__getstructoffset())->GetCharge((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_651_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CDomino*) G__getstructoffset())->GetTiming((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_651_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CDomino*) G__getstructoffset())->GetTiming3((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_651_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CDomino*) G__getstructoffset())->GetTiming5((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_651_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((CDomino*) G__getstructoffset())->GetAveTiming((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_651_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CDomino*) G__getstructoffset())->ChargeSearch((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_651_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((CDomino*) G__getstructoffset())->GetIntegADC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_651_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((CDomino*) G__getstructoffset())->GetArrTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_651_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CDomino*) G__getstructoffset())->GetWindowLeft());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_651_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CDomino::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_651_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CDomino::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_651_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CDomino::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_651_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CDomino::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_651_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CDomino*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_651_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CDomino::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_651_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CDomino::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_651_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CDomino::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_651_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CDomino::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CDominoDict_651_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CDomino* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CDomino(*(CDomino*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CDominoDictLN_CDomino));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CDomino G__TCDomino;
static int G__CDominoDict_651_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CDomino*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CDomino*) (soff+(sizeof(CDomino)*i)))->~G__TCDomino();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CDomino*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CDomino*) (soff))->~G__TCDomino();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CDominoDict_651_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CDomino* dest = (CDomino*) G__getstructoffset();
   *dest = *(CDomino*) libp->para[0].ref;
   const CDomino& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* COUNT */
static int G__CDominoDict_652_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   COUNT* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new COUNT[n];
     } else {
       p = new((void*) gvp) COUNT[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new COUNT;
     } else {
       p = new((void*) gvp) COUNT;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CDominoDictLN_COUNT));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_652_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) COUNT::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_652_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) COUNT::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_652_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) COUNT::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_652_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      COUNT::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_652_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((COUNT*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_652_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) COUNT::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_652_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) COUNT::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_652_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) COUNT::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CDominoDict_652_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) COUNT::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CDominoDict_652_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   COUNT* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new COUNT(*(COUNT*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CDominoDictLN_COUNT));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef COUNT G__TCOUNT;
static int G__CDominoDict_652_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (COUNT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((COUNT*) (soff+(sizeof(COUNT)*i)))->~G__TCOUNT();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (COUNT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((COUNT*) (soff))->~G__TCOUNT();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CDominoDict_652_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   COUNT* dest = (COUNT*) G__getstructoffset();
   *dest = *(COUNT*) libp->para[0].ref;
   const COUNT& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* CDomino */

/* COUNT */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncCDominoDict {
 public:
  G__Sizep2memfuncCDominoDict(): p(&G__Sizep2memfuncCDominoDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncCDominoDict::*p)();
};

size_t G__get_sizep2memfuncCDominoDict()
{
  G__Sizep2memfuncCDominoDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceCDominoDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__CDominoDictLN_CDomino))) {
     CDomino *G__Lderived;
     G__Lderived=(CDomino*)0x1000;
     {
       TGraph *G__Lpbase=(TGraph*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CDominoDictLN_CDomino),G__get_linked_tagnum(&G__CDominoDictLN_TGraph),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CDominoDictLN_CDomino),G__get_linked_tagnum(&G__CDominoDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CDominoDictLN_CDomino),G__get_linked_tagnum(&G__CDominoDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CDominoDictLN_CDomino),G__get_linked_tagnum(&G__CDominoDictLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CDominoDictLN_CDomino),G__get_linked_tagnum(&G__CDominoDictLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CDominoDictLN_CDomino),G__get_linked_tagnum(&G__CDominoDictLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__CDominoDictLN_COUNT))) {
     COUNT *G__Lderived;
     G__Lderived=(COUNT*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CDominoDictLN_COUNT),G__get_linked_tagnum(&G__CDominoDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableCDominoDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__CDominoDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CDominoDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CDominoDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CDominoDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CDominoDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__CDominoDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CDominoDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CDominoDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CDominoDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CDominoDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__CDominoDictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__CDominoDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__CDominoDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CDominoDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CDominoDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CDominoDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CDominoDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__CDominoDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__CDominoDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__CDominoDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__CDominoDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__CDominoDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__CDominoDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__CDominoDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__CDominoDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__CDominoDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__CDominoDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__CDominoDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__CDominoDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* CDomino */
static void G__setup_memvarCDomino(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CDominoDictLN_CDomino));
   { CDomino *p; p=(CDomino*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"dIsRaw=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"dStopCell=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"dCell[1024]=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"dMinADC=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"dArrTime=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"dIntegADC=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"dWindowLeft=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"dWindowRight=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__CDominoDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* COUNT */
static void G__setup_memvarCOUNT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CDominoDictLN_COUNT));
   { COUNT *p; p=(COUNT*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->EvtNum)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"EvtNum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PPS)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"PPS=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrgCnt)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"TrgCnt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ClkCnt)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"ClkCnt=",0,"usec");
   G__memvar_setup((void*)((long)(&p->ClkCnt10M)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"ClkCnt10M=",0,"usec");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__CDominoDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarCDominoDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncCDomino(void) {
   /* CDomino */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CDominoDictLN_CDomino));
   G__memfunc_setup("CDomino",681,G__CDominoDict_651_0_1, 105, G__get_linked_tagnum(&G__CDominoDictLN_CDomino), -1, 0, 1, 1, 1, 0, "i - - 0 'READDEPTH' rd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetADC",488,G__CDominoDict_651_0_2, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetADC",488,G__CDominoDict_651_0_3, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - slice", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__CDominoDict_651_0_4, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - slice", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCell",672,G__CDominoDict_651_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - slice", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStopCell",1106,G__CDominoDict_651_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - cell", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCell",684,G__CDominoDict_651_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStopCell",1094,G__CDominoDict_651_0_8, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsRaw",786,G__CDominoDict_651_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - tf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsRaw",486,G__CDominoDict_651_0_10, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPulseHeight",1410,G__CDominoDict_651_0_11, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - fcell i - - 0 - lcell", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinimum",1020,G__CDominoDict_651_0_12, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCharge",874,G__CDominoDict_651_0_13, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - firstbin i - - 0 - lastbin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTiming",904,G__CDominoDict_651_0_14, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - firstbin i - - 0 - lastbin", "maximum search", (void*) NULL, 0);
   G__memfunc_setup("GetTiming3",955,G__CDominoDict_651_0_15, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - firstbin i - - 0 - lastbin", "maximum search by 3 point", (void*) NULL, 0);
   G__memfunc_setup("GetTiming5",957,G__CDominoDict_651_0_16, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - firstbin i - - 0 - lastbin", "maximum search by 5 point", (void*) NULL, 0);
   G__memfunc_setup("GetAveTiming",1188,G__CDominoDict_651_0_17, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - firstbin i - - 0 - lastbin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChargeSearch",1184,G__CDominoDict_651_0_18, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - firstbin i - - 0 - lastbin "
"i - - 0 - window", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIntegADC",991,G__CDominoDict_651_0_19, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArrTime",980,G__CDominoDict_651_0_20, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWindowLeft",1315,G__CDominoDict_651_0_21, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__CDominoDict_651_0_22, 85, G__get_linked_tagnum(&G__CDominoDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CDomino::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__CDominoDict_651_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CDomino::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__CDominoDict_651_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CDomino::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__CDominoDict_651_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CDomino::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__CDominoDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CDominoDict_651_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CDominoDict_651_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CDomino::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CDominoDict_651_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CDomino::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__CDominoDict_651_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CDomino::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CDominoDict_651_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CDomino::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CDomino", 681, G__CDominoDict_651_0_34, (int) ('i'), G__get_linked_tagnum(&G__CDominoDictLN_CDomino), -1, 0, 1, 1, 1, 0, "u 'CDomino' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CDomino", 807, G__CDominoDict_651_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CDominoDict_651_0_36, (int) ('u'), G__get_linked_tagnum(&G__CDominoDictLN_CDomino), -1, 1, 1, 1, 1, 0, "u 'CDomino' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCOUNT(void) {
   /* COUNT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CDominoDictLN_COUNT));
   G__memfunc_setup("COUNT",393,G__CDominoDict_652_0_1, 105, G__get_linked_tagnum(&G__CDominoDictLN_COUNT), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__CDominoDict_652_0_2, 85, G__get_linked_tagnum(&G__CDominoDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&COUNT::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__CDominoDict_652_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&COUNT::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__CDominoDict_652_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&COUNT::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__CDominoDict_652_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&COUNT::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__CDominoDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CDominoDict_652_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CDominoDict_652_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&COUNT::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CDominoDict_652_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&COUNT::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__CDominoDict_652_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&COUNT::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CDominoDict_652_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&COUNT::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("COUNT", 393, G__CDominoDict_652_0_14, (int) ('i'), G__get_linked_tagnum(&G__CDominoDictLN_COUNT), -1, 0, 1, 1, 1, 0, "u 'COUNT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~COUNT", 519, G__CDominoDict_652_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CDominoDict_652_0_16, (int) ('u'), G__get_linked_tagnum(&G__CDominoDictLN_COUNT), -1, 1, 1, 1, 1, 0, "u 'COUNT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncCDominoDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalCDominoDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcCDominoDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__CDominoDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__CDominoDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__CDominoDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__CDominoDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__CDominoDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__CDominoDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__CDominoDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__CDominoDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__CDominoDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__CDominoDictLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__CDominoDictLN_TAttFill = { "TAttFill" , 99 , -1 };
G__linked_taginfo G__CDominoDictLN_TAttMarker = { "TAttMarker" , 99 , -1 };
G__linked_taginfo G__CDominoDictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__CDominoDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__CDominoDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__CDominoDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__CDominoDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__CDominoDictLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__CDominoDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__CDominoDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__CDominoDictLN_CDomino = { "CDomino" , 99 , -1 };
G__linked_taginfo G__CDominoDictLN_COUNT = { "COUNT" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableCDominoDict() {
  G__CDominoDictLN_TClass.tagnum = -1 ;
  G__CDominoDictLN_TBuffer.tagnum = -1 ;
  G__CDominoDictLN_TMemberInspector.tagnum = -1 ;
  G__CDominoDictLN_TObject.tagnum = -1 ;
  G__CDominoDictLN_TNamed.tagnum = -1 ;
  G__CDominoDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__CDominoDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CDominoDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__CDominoDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CDominoDictLN_TAttLine.tagnum = -1 ;
  G__CDominoDictLN_TAttFill.tagnum = -1 ;
  G__CDominoDictLN_TAttMarker.tagnum = -1 ;
  G__CDominoDictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__CDominoDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__CDominoDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CDominoDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__CDominoDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__CDominoDictLN_TGraph.tagnum = -1 ;
  G__CDominoDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__CDominoDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__CDominoDictLN_CDomino.tagnum = -1 ;
  G__CDominoDictLN_COUNT.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableCDominoDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__CDominoDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__CDominoDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__CDominoDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__CDominoDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__CDominoDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__CDominoDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__CDominoDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__CDominoDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__CDominoDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__CDominoDictLN_TAttLine);
   G__get_linked_tagnum_fwd(&G__CDominoDictLN_TAttFill);
   G__get_linked_tagnum_fwd(&G__CDominoDictLN_TAttMarker);
   G__get_linked_tagnum_fwd(&G__CDominoDictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__CDominoDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__CDominoDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__CDominoDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__CDominoDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__CDominoDictLN_TGraph);
   G__get_linked_tagnum_fwd(&G__CDominoDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__CDominoDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CDominoDictLN_CDomino),sizeof(CDomino),-1,62720,(char*)NULL,G__setup_memvarCDomino,G__setup_memfuncCDomino);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CDominoDictLN_COUNT),sizeof(COUNT),-1,29952,(char*)NULL,G__setup_memvarCOUNT,G__setup_memfuncCOUNT);
}
extern "C" void G__cpp_setupCDominoDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupCDominoDict()");
  G__set_cpp_environmentCDominoDict();
  G__cpp_setup_tagtableCDominoDict();

  G__cpp_setup_inheritanceCDominoDict();

  G__cpp_setup_typetableCDominoDict();

  G__cpp_setup_memvarCDominoDict();

  G__cpp_setup_memfuncCDominoDict();
  G__cpp_setup_globalCDominoDict();
  G__cpp_setup_funcCDominoDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncCDominoDict();
  return;
}
class G__cpp_setup_initCDominoDict {
  public:
    G__cpp_setup_initCDominoDict() { G__add_setup_func("CDominoDict",(G__incsetup)(&G__cpp_setupCDominoDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initCDominoDict() { G__remove_setup_func("CDominoDict"); }
};
G__cpp_setup_initCDominoDict G__cpp_setup_initializerCDominoDict;

